## you can build image with "docker build -f build/cloud.Dockerfile -t emagiceye-cloud-app:base ."
CLOUD_IMAGE='emagiceye-cloud-app:base'
EVIDENCE_IMAGE="test_evidence:latest"
TARGET='/hdd1/dannv5/.deploy/${{github.repository}}'
DATABASE_URL='postgresql://eme_db:48554f2d6defd93cb67b392acc1256c11fbe114b927b6e7dbd22a8053d76df2f@47.128.81.230:8005/postgres?sslmode=disable'
KAFKA_BROKER='192.168.1.91:9092'
EVENT_KAFKA_BROKER='47.128.81.230:8003'
KAFKA_VEHICLE_TOPIC='emagic.vehicles'
KAFKA_EVENT_TOPIC='emagic.events'
KAFKA_EVIDENCE_TOPIC='emagic.evidences'
STORAGE_URL='192.168.1.92:51003'
STORAGE_DOMAIN_URL='https://minio.emagiceyes.rainscales.com'
STORAGE_BUCKET='emagic-event'
STORAGE_ACCESS_KEY='eme_minio'
STORAGE_SECRET_KEY='Rainscales@2024'
STORAGE_SECURE=false
LLAVA_URL='http://192.168.1.91:8080/videos/chat'
KAFKA_DEEPSTREAM_TOPIC='emagic.deepstream'
KAFKA_PRODUCT_TOPIC='emagic.products'
RECHECK_WITH_LLAVA='PAR01,PAR02,HM01,HM02,HM03,HM05,PPE01,PPE02,PRD01,PL01'
MINI_BACKEND_API="http://192.168.1.91:28000/api/v1/features"

## KAFKA
KAFKA_TOPIC_FORKLIFT_PERSON="emagic.forklift_person"
KAFKA_TOPIC_FORKLIFT_PRODUCT="emagic.forklift_product"
KAFKA_TOPIC_ALCOHOL_PERSON="emagic.alcohol_person"
KAFKA_TOPIC_PAR="emagic.par"
KAFKA_TOPIC_PRODUCT_FALL="emagic.product_fall"
KAFKA_TOPIC_YOLOV8M="emagic.yolov8m"